

def bar (x_1 : obj) (x_2 : obj) : obj :=
  let x_3 : obj := 0;
  let x_4 : u8 := Nat.decEq x_1 x_3;
  case x_4 : obj of
  Bool.false →
    ret x_1
  Bool.true →
    ret x_2

def foo (x_1 : obj) (x_2 : obj) : obj :=
  let x_3 : obj := bar x_1 x_2;
  ret x_3

def main (x_1 : obj) (x_2 : obj) : obj :=
  let x_3 : u32 := 0;
  let x_4 : obj := ctor_0[EStateM.Result.ok] x_3 x_2;
  ret x_4