

def case (x_1 : obj) : obj :=
  let x_2 : obj := 0;
  let x_3 : u8 := Nat.decEq x_1 x_2;
  case x_3 : obj of
  Bool.false →
    let x_4 : obj := 1;
    let x_5 : u8 := Nat.decEq x_1 x_4;
    case x_5 : obj of
    Bool.false →
      let x_6 : obj := Nat.add x_1 x_4;
      ret x_6
    Bool.true →
      let x_7 : obj := 2;
      ret x_7
  Bool.true →
    let x_8 : obj := 1;
    ret x_8